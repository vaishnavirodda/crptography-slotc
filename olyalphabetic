#include <stdio.h>
#include <string.h>
#include <ctype.h>

void generate_vigenere_table(char table[26][26]) {
    int i, j;
    for (i = 0; i < 26; i++) {
        for (j = 0; j < 26; j++) {
            table[i][j] = (i + j) % 26 + 'A';
        }
    }
}

void generate_keyed_vigenere_table(char *key, char table[26][26]) {
    int i, j, k, len;
    len = strlen(key);
    k = 0;
    for (i = 0; i < 26; i++) {
        for (j = 0; j < 26; j++) {
            table[i][j] = ((key[k] - 'A' + j) % 26) + 'A';
            k = (k + 1) % len;
        }
    }
}

void vigenere_encrypt(char *str, char *key, char *encrypted) {
    int len = strlen(str);
    int i, j;
    char table[26][26];
    generate_keyed_vigenere_table(key, table);
    j = 0;
    for (i = 0; i < len; i++) {
        if (isalpha(str[i])) {
            encrypted[i] = table[str[i]-'A'][key[j]-'A'];
            j = (j + 1) % strlen(key);
        } else {
            encrypted[i] = str[i];
        }
    }
    encrypted[len] = '\0';
}

int main() {
    char plaintext[100], key[100], encrypted[100];
    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    printf("Enter key: ");
    fgets(key, sizeof(key), stdin);

    plaintext[strcspn(plaintext, "\n")] = '\0';
    key[strcspn(key, "\n")] = '\0';

    vigenere_encrypt(plaintext, key, encrypted);
    printf("Encrypted text: %s\n", encrypted);

    return 0;
}
